---
#
# *** YAML file for minimal Lubuntu (GUI) image ***
#
#                   _
#   __ _ _ __   ___| |__   ___  _ __ ___
#  / _` | '_ \ / __| '_ \ / _ \| '__/ __|
# | (_| | | | | (__| | | | (_) | |  \__ \
#  \__,_|_| |_|\___|_| |_|\___/|_|  |___/
#
# These are substitutions made at YAML read time
#
_anchors:
- &builder_common_options
  boot_command:
  - '<esc><esc><enter><wait>'
  - 'install initrd=/install/initrd.gz '
  - 'auto=true '
  - 'url=http://{{.HTTPIP}}:{{.HTTPPort}}/{{user `preseed_file`}} '
  - 'language={{user `language`}} '
  - 'country={{user `country`}} '
  - 'locale={{user `locale`}} '
  - 'hostname={{user `vm_name`}} '
  - 'domain={{user `domain`}} '
  - 'interface=auto '
  - 'console-setup/ask_detect=false '
  - 'keyboard-configuration/layoutcode={{user `keyboard`}} '
  - 'vga=788 noprompt quiet --<enter>'
  boot_wait: '{{user `boot_wait`}}'
  communicator: '{{user `communicator`}}'
  cpus: '{{user `cpus`}}'
  disk_size: '{{user `disk_size`}}'
# floppy_dirs: [](string)
# floppy_files: [](string)
  headless: '{{user `headless`}}'
  http_directory: '{{user `http_directory`}}'
  http_port_max: '{{user `http_port_max`}}'
  http_port_min: '{{user `http_port_min`}}'
  iso_checksum: '{{user `iso_checksum`}}'
  iso_target_extension: iso
  iso_target_path: '{{user `packer_cache_dir`}}/{{user `iso_file`}}'
  iso_urls:
  - '{{user `iso_path_internal`}}/{{user `iso_file`}}'
  - '{{user `iso_path_external`}}/{{user `iso_file`}}'
  memory: '{{user `memory`}}'
  output_directory: '{{user `output_directory`}}'
  shutdown_command: echo '{{user `init_password`}}' | sudo -E -S poweroff
  shutdown_timeout: '{{user `shutdown_timeout`}}'
  vm_name: '{{user `vm_name`}}'
- &communicator_ssh_options
  ssh_agent_auth: '{{user `ssh_agent_auth`}}'
  #ssh_bastion_agent_auth: false
  #ssh_bastion_host: (string)
  #ssh_bastion_password: (string)
  #ssh_bastion_port: '1'
  #ssh_bastion_private_key_file: (string)
  #ssh_bastion_username: (string)
  ssh_disable_agent_forwarding: '{{user `ssh_disable_agent_forwarding`}}'
  ssh_file_transfer_method: '{{user `ssh_file_transfer_method`}}'
  ssh_handshake_attempts: '{{user `ssh_handshake_attempts`}}'
  #ssh_host: (string)
  ssh_keep_alive_interval: '{{user `ssh_keep_alive_interval`}}'
  ssh_password: '{{user `init_password`}}'
  ssh_port: '{{user `ssh_port`}}'
  #ssh_private_key_file: (string)
  #ssh_proxy_host: (string)
  #ssh_proxy_password: (string)
  #ssh_proxy_port: '1080'
  #ssh_proxy_username: (string)
  ssh_pty: '{{user `ssh_pty`}}'
  #ssh_read_write_timeout: (string)
  ssh_timeout: '{{user `ssh_timeout`}}'
  ssh_username: '{{user `init_username`}}'
- &provisioner_shell_options
  binary: false
  #environment_vars: [](string)
  #execute_command: echo '{{user `init_password`}}' | {{.Vars}} sudo -E -S '{{.Path}}'
  expect_disconnect: true
  inline_shebang: /bin/sh -e
  #remote_file: script_nnn.sh
  #remote_folder: /tmp
  #remote_path: /tmp/script_nnn.sh
  skip_clean: false
  start_retry_timeout: '{{user `start_retry_timeout`}}'
  type: shell
# TODO: reference the above anchor here to reduce duplication
- &provisioner_root_shell_options
  binary: false
  #environment_vars: [](string)
  execute_command: echo '{{user `init_password`}}' | {{.Vars}} sudo -E -S '{{.Path}}'
  expect_disconnect: true
  inline_shebang: /bin/sh -e
  #remote_file: script_nnn.sh
  #remote_folder: /tmp
  #remote_path: /tmp/script_nnn.sh
  skip_clean: false
  start_retry_timeout: '{{user `start_retry_timeout`}}'
  type: shell
- &provisioner_file_options
  type: file
#  _           _ _     _
# | |__  _   _(_) | __| | ___ _ __ ___
# | '_ \| | | | | |/ _` |/ _ \ '__/ __|
# | |_) | |_| | | | (_| |  __/ |  \__ \
# |_.__/ \__,_|_|_|\__,_|\___|_|  |___/
builders:
#                    _      _               _ _                    _
#             __   _(_)_ __| |_ _   _  __ _| | |__   _____  __    (_)___  ___
#             \ \ / / | '__| __| | | |/ _` | | '_ \ / _ \ \/ /____| / __|/ _ \
#              \ V /| | |  | |_| |_| | (_| | | |_) | (_) >  <_____| \__ \ (_) |
#               \_/ |_|_|   \__|\__,_|\__,_|_|_.__/ \___/_/\_\    |_|___/\___/
#
# NOTE: '<<' is a common, but non-standard, feature of many YAML loaders.
# It merges the value (expected to be a mapping or sequence of mappings)
# into the mapping being defined.
#
- <<: [*builder_common_options, *communicator_ssh_options]
  #export_opts: [](string)
  # For VirtualBox, choices are: ova ovf
  format: '{{user `vbox_format`}}'
  guest_additions_mode: '{{user `guest_additions_mode`}}'
  guest_additions_path: '{{user `guest_additions_path`}}'
  # SHA256 hash of the selected guest additions ISO
  #guest_additions_sha256: (string)
  # URL from which to get the guest additions ISO
  # Default is builder host file system; fallback is download from net
  #guest_additions_url: (string)
  # Interface to which the virtual CD gets attached.
  # One of: ide, sata; default is ide
  #guest_additions_interface: (string)
  guest_os_type: '{{user `guest_os_type`}}'
  # Set this to true if target is an SSD
  hard_drive_discard: false
  # Options are: ide, sata, pcie; default is ide
  # 'pcie' requires VBox 6+, extension pack, EFI mode
  hard_drive_interface: sata
  hard_drive_nonrotational: false
  host_port_max: '{{user `ssh_host_port_max`}}'
  host_port_min: '{{user `ssh_host_port_min`}}'
  # Emulated interface type for OS installer ISO
  iso_interface: sata
  keep_registered: '{{user `keep_registered`}}'
  name: vbox
  post_shutdown_delay: 0s
  sata_port_count: '1'
  skip_export: false
  # true = disable SSH NAT port mapping and use fixed ssh_port
  # default is false
  skip_nat_mapping: false
  type: virtualbox-iso
  vboxmanage:
  - - modifyvm
    - '{{.Name}}'
    - '--rtcuseutc'
    - >-
      {{if user `system_clock_in_utc` | eq `true` -}}
      on
      {{- else -}}
      off
      {{- end}}
# Comment out for headless VMs.
# Uncomment for desktop VMs.
  vboxmanage_post:
  # Set up video interface for GUI, disable VRDE
  - - modifyvm
    - '{{.Name}}'
    - '--graphicscontroller'
    - 'vmsvga'
    - '--vram'
    - '32'
    - '--accelerate3d'
    - 'on'
    - '--vrde'
    - 'off'
  # Enable bidi clipboard share and drag & drop for GUI
  - - modifyvm
    - '{{.Name}}'
    - '--clipboard'
    - 'bidirectional'
    - '--draganddrop'
    - 'bidirectional'
  virtualbox_version_file: '/tmp/.vbox_version'
  vrdp_bind_address: '{{user `vnc_vrdp_bind_address`}}'
  vrdp_port_max: '{{user `vnc_vrdp_port_max`}}'
  vrdp_port_min: '{{user `vnc_vrdp_port_min`}}'
#                                                    __ _  ___ _ __ ___  _   _
#                                                   / _` |/ _ \ '_ ` _ \| | | |
#                                                  | (_| |  __/ | | | | | |_| |
#                                                   \__, |\___|_| |_| |_|\__,_|
#                                                      |_|
- <<: [*builder_common_options, *communicator_ssh_options]
  accelerator: kvm
  disk_cache: writeback
  disk_compression: false
  disk_discard: ignore
  disk_image: false
  disk_interface: virtio-scsi
  # For qemu, choices are: qcow2 raw
  format: '{{user `qemu_format`}}'
  host_port_max: '{{user `ssh_host_port_max`}}'
  host_port_min: '{{user `ssh_host_port_min`}}'
  iso_skip_cache: false
  machine_type: pc
  name: qemu
  net_device: virtio-net
  qemu_binary: '{{user `qemu_binary`}}'
  #qemuargs: [][](string)
  skip_compaction: true
  type: qemu
  use_default_display: false
  vnc_bind_address: '{{user `vnc_vrdp_bind_address`}}'
  vnc_port_max: '{{user `vnc_vrdp_port_max`}}'
  vnc_port_min: '{{user `vnc_vrdp_port_min`}}'
#
description: '{{user `description`}}'
#
min_packer_version: 1.5.6
#                  _
#  _ __   ___  ___| |_      _ __  _ __ ___   ___ ___  ___ ___  ___  _ __ ___
# | '_ \ / _ \/ __| __|____| '_ \| '__/ _ \ / __/ _ \/ __/ __|/ _ \| '__/ __|
# | |_) | (_) \__ \ ||_____| |_) | | | (_) | (_|  __/\__ \__ \ (_) | |  \__ \
# | .__/ \___/|___/\__|    | .__/|_|  \___/ \___\___||___/___/\___/|_|  |___/
# |_|                      |_|
post-processors:
#- compression_level: 6
#  include: [](string)
#  keep_input_artifact: true
#  only:
#  - vbox
#  - qemu
#  output: '{{user `output_directory`}}/{{user `vm_name`}}-{{user `version`}}-{{build_name}}.box'
#  type: vagrant
#  vagrantfile_template: '{{user `vagrantfile_template`}}'
- compression_level: 6
  format: .gz
  keep_input_artifact: true
  only:
  - qemu
  output: '{{user `output_directory`}}/{{user `vm_name`}}.{{user `qemu_format`}}.gz'
  type: compress
# Generate checksum file
- checksum_types:
  - sha256
  only:
  - vbox
  output: '{{user `output_directory`}}/{{user `vm_name`}}.{{user `vbox_format`}}.{{.ChecksumType}}'
  type: checksum
#                       _     _
#  _ __  _ __ _____   _(_)___(_) ___  _ __   ___ _ __ ___
# | '_ \| '__/ _ \ \ / / / __| |/ _ \| '_ \ / _ \ '__/ __|
# | |_) | | | (_) \ V /| \__ \ | (_) | | | |  __/ |  \__ \
# | .__/|_|  \___/ \_/ |_|___/_|\___/|_| |_|\___|_|  |___/
# |_|
provisioners:
# Set sudo access w/o password
- <<: *provisioner_root_shell_options
  inline:
  - 'echo ''{{user `init_username`}} ALL=(ALL) NOPASSWD: ALL'' > /etc/sudoers.d/99{{user `init_username`}}'
  - chmod 0440 /etc/sudoers.d/99{{user `init_username`}}
# Copy provisioner scripts
- <<: *provisioner_file_options
  destination: '/home/{{user `init_username`}}/'
  source: '{{user `pb_source_dir`}}/finish-lubuntu-install.sh'
- <<: *provisioner_file_options
  destination: '/home/{{user `init_username`}}/'
  source: '{{user `pb_source_dir`}}/robust_execute.sh'
# Update installed s/w, install additional s/w, remove unnecessary fluff
- <<: *provisioner_root_shell_options
  inline:
  - /home/{{user `init_username`}}/finish-lubuntu-install.sh
# Install VBox Guest Additions
# Must remove the current vboxguest module before we build the new one
- <<: *provisioner_root_shell_options
  inline:
  - mkdir /mnt/vboxga_iso
  - mount -o loop,ro {{user `guest_additions_path`}} /mnt/vboxga_iso
  - cd /mnt/vboxga_iso
  - modprobe -r vboxguest
  - sh ./VBoxLinuxAdditions.run
  - cd /home/{{user `init_username`}}
  - umount -d /mnt/vboxga_iso
  - rm -f {{user `guest_additions_path`}}
  - usermod {{user `init_username`}} -a -G vboxsf
  only:
  - vbox
# Zero out unused file system blocks
- <<: *provisioner_root_shell_options
  inline:
  - dd if=/dev/zero of=/ZEROFILL bs=16M || true
  - rm /ZEROFILL
  - sync
  only:
  - vbox
  - qemu
#                  _       _     _
# __   ____ _ _ __(_) __ _| |__ | | ___  ___
# \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|
#  \ V / (_| | |  | | (_| | |_) | |  __/\__ \
#   \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/
variables:
  apt_cache_url: http://myserver:3142
  boot_wait: 5s
  communicator: ssh
  country: US
  cpus: '1'
  description: 'Minimal Lubuntu image for x86_64 Ubuntu 18.04.x LTS'
  disk_size: '10000'
  #
  # Initial capacity of the virtual disk, in MB
  # (can be expanded later)
  domain: ''
  #
  # VirtualBox Guest Additions variables
  #
  #  Options are: disable, attach, upload
  guest_additions_mode: 'upload'
  # 
  #  Options enabled for mode 'upload'
  #   Place to store uploaded VBox Guest Additions ISO file
  guest_additions_path: '/home/{{user `init_username`}}/vboxga_iso'
  #   SHA256 hash of the selected guest additions ISO
  #guest_additions_sha256: (string)
  #   URL from which to get the guest additions ISO
  #   Default is builder host file system; fallback is download from net
  #guest_additions_url: (string)
  #
  #  Options enabled for mode 'attach':
  #   Interface to which the virtual CD gets attached.
  #   One of: ide, sata; default is ide
  #guest_additions_interface: (string)
  #
  # OS type for VirtualBox
  # Execute 'vboxmanage list ostypes' for legal values 
  guest_os_type: Ubuntu_64
  #
  # Values are 'true' or 'false'.
  # The VM will start wihout a console if set to 'true'.
  headless: 'false'
  #
  # Packer HTTP server settings
  #
  # Directory relative to the Packer working directory
  http_directory: '.'
  # Min and max port range for the HTTP server
  http_port_max: '9000'
  http_port_min: '8000'
  #
  # Initial user settings
  #
  init_fullname: Ghost Writer
  init_password: 1ma63b0rk3d
  init_username: ghost
  #
  # ISO (OS install disk image) settings
  #
  iso_checksum: sha256:e2ecdace33c939527cbc9e8d23576381c493b071107207d2040af72595f8990b
  #
  # See anchors section for how these variables are used
  #
  iso_file: ubuntu-18.04.4-server-amd64.iso
  iso_path_external: http://cdimage.ubuntu.com/releases/18.04/release
  #iso_path_internal: http://myserver:8080/ubuntu
  #
  # Set to true to leave the VM registered with VirtualBox
  # Default is false
  keep_registered: 'false'
  #
  # Settings for the OS installer
  #
  keyboard: us
  language: en
  locale: en_US.UTF-8
  #
  # How much RAM to give the virtual machine
  memory: '1024'
  #min_vagrant_version: 2.2.9
  #
  # Where to put the products
  output_directory: '../build/minilu-{{isotime "2006-01-02-15-04-05"}}'
  #
  # Where to store downloaded ISO files
  packer_cache_dir: packer_cache
  #
  # Files to be processed as templates
  pb_templates:
  - minimal-lubuntu.preseed
  #- common.vagrant
  #
  # File with OS installer settings
  preseed_file: '{{user `pb_template_dir`}}/minimal-lubuntu.preseed'
  #
  # qemu output format
  # choices are: qcow2 raw
  qemu_format: qcow2
  #
  # Which qemu executable to build with
  qemu_binary: qemu-system-x86_64
  #
  # How long to wait for guest to shut down
  shutdown_timeout: 5m
  #
  # VirtualBox SSH communicator settings
  #
  ssh_agent_auth: 'false'
  ssh_disable_agent_forwarding: 'false'
  ssh_file_transfer_method: scp
  ssh_handshake_attempts: '10'
  # Min/max port range for the NAT port to be forwarded to the guest
  ssh_host_port_max: '4444'
  ssh_host_port_min: '2222'
  # Interval between 'keep alive' messages to the guest
  ssh_keep_alive_interval: 5s
  ssh_port: '22'
  ssh_pty: 'false'
  ssh_timeout: 60m
  #
  start_retry_timeout: 5m
  #
  # Time
  #
  # Only set this to 'false' for images to run from a USB device on a Windows machine
  system_clock_in_utc: 'true'
  # See /usr/share/zoneinfo for valid values
  # E.g. UTC, US/Pacific, America/Los_Angeles
  timezone: America/Los_Angeles
  #vagrantfile_template: '{{user `pb_template_dir`}}/common.vagrant'
  #
  # VirtualBox output format
  # Choices are: ova ovf
  vbox_format: ova
  version: 0.0.0
  vm_name: minimal-lubuntu-bionic
  #   
  vnc_vrdp_bind_address: 127.0.0.1
  vnc_vrdp_port_max: '6000'
  vnc_vrdp_port_min: '5900'
